@page "/product"
@using System.Globalization
@using YumBlazor.Data
@using YumBlazor.Repository.IRepository
@inject IProductRepository _categoryRepository

@inject IJSRuntime _JS

<BsModal OnModalConfirmation="ConfirmDelete_Click" ButtonBootstrapStyle="btn-danger" ButtonText="Delete" Title="Are you sure you want to delete the category?"></BsModal>
@if(IsProcessing)
{
    <div class="position-absolute w-75 h-75 d-flex flex-column align-items-center bg-white justify-content-center">
        <img src="/images/loading.gif" alt="loading" />

    </div>
}
else
{
    <div class="card shadow border-0  m-4">
        <div class="card-header bg-black bg-gradient ml-0 py-3">
            <div class="row">
                <div  class="col-12 text-center">
                    <h2 class="text-white py-2">Product List</h2>
                </div>
            </div>
        </div>
        <div class="card-body p-4">
            <div class="row pb-3 ">
                <div class="col-12 text-end">
                    <a href="/product/create" class="btn btn-lg btn-secondary" style="width:250px;"><i class="bi bi-plus-square-fill"></i> Add New Product</a>
                </div>
                @if (Products.Any())
                {
                    <table class="table table-striped table-hover">
                        <thead>
                            <tr>
                                <th>Product Name</th>
                                <th>Price</th>
                                <th>Special Tag</th>
                                 <th>Category</th>
                                <th></th>
                             
                            </tr>
                        </thead>
                        <tbody>
                            @foreach(var product in Products)
                            {
                                <tr>
                                    <td>@product.Name</td>
                                    <td>@product.Price.ToString("C",CultureInfo.GetCultureInfo("en-us"))
                                    </td>
                                    <td> <span class="badge text-bg-info"> @product.SpecialTag</span></td>
                                     <td>@product.Category.Name</td> 
                                    <td>
                                        <a href="@($"/product/update/{product.Id}")" class="btn btn-primary"><i class="bi bi-pencil-square"></i> Edit</a>
                                        <button class="btn btn-danger" @onclick="()=>HandleDelete(product.Id)"><i class="bi bi-trash3"></i> Delete</button>
                                    </td>
                                   
                                </tr>
                            }
                           
                        </tbody>

                    </table>
                }
             </div>

        </div>

    </div>
}

@code {
    private bool IsProcessing { get; set; } = true;

    private IEnumerable<Product> Products { get; set; } = new List<Product>();
    public int DeleteProductID { get; set; } = 0;

   
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if(firstRender)
        {
            IsProcessing = true;
            //await Task.Delay(2000);
            await LoadProducts();
            IsProcessing = false;
            StateHasChanged();
        }
        //return base.OnAfterRenderAsync(firstRender);
    }

    private async Task LoadProducts()
    {
        Products = await _categoryRepository.GetAllAsync();
    }

    private async Task HandleDelete(int id)
    {
        DeleteProductID = id;
        await _JS.InvokeVoidAsync("ShowConfirmationModal");
    }

    private async Task ConfirmDelete_Click(bool isConfirmed)
    {
        IsProcessing = true;
        await _JS.InvokeVoidAsync("HideConfirmationModal");
        if(isConfirmed && DeleteProductID != 0)
        {
           var result= await _categoryRepository.DeleteAsync(DeleteProductID);
           if(result)
            _JS?.ToastrSuccess("Data Deleted Successfully");
            else
                _JS?.ToastrError("Error Encountered while deleting");
                await LoadProducts();
        }
        DeleteProductID = 0;
        IsProcessing = false;
    }

}
