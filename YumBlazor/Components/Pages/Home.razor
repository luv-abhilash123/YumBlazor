@page "/"
@using System.Globalization
@inject IProductRepository _productrepository
@inject ICategoryRepository _categoryRepository

<PageTitle>Home</PageTitle>

@if (IsProcessing)
{
    <div class="position-absolute w-100 vh-75 d-flex flex-column align-items-center bg-white justify-content-center">
        <img src="/images/loading.gif" alt="loading" />

    </div>
}
else
{

    <div class="container-fluid px-0 m-0 full-width">
        <div class="jumbotron-custom">
            <div class="m-auto d-flex align-items-center" style="width: 400px; height: 50vh;">

                <div class="d-flex align-items-center" style="width: 100%;">
                    <input type="text" class="form-control rounded-pill"
                           @bind:event="oninput" @bind:get="_searchText" @bind:set="FIlterProductByName"
                    placeholder="Search for Food Items!"
                    style="width: 100%; padding: 20px;">
                    <span style="position: relative; left: -43px;"><i class="bi bi-search"></i></span>
                </div>
            </div>
        </div>

        <div class="content px-4 m-2">
            <ul class="nav nav-underline justify-content-center mb-2">
                <li class="nav-item">
                    <span class="nav-link @GetActiveTabClass(0)" href="#" style="cursor: pointer" @onclick="()=>FilterProducts(0)">All</span>
                </li>
                @foreach (var category in Categories)
                {
                    <li class="nav-item">
                        <span class="nav-link @GetActiveTabClass(category.Id)" href="#" style="cursor: pointer" @onclick="()=>FilterProducts(category.Id)">@category.Name</span>
                    </li>
                }

              @*   <li class="nav-item">
                    <span class="nav-link" href="#" style="cursor: pointer">All</span>
                </li>
                <li class="nav-item">
                    <span class="nav-link" href="#" style="cursor: pointer">Cat 1</span>
                </li>
                <li class="nav-item">
                    <span class="nav-link" href="#" style="cursor: pointer">Cat 2</span>
                </li> *@
            </ul>
            <div class="row mt-4 mx-1">
                @foreach(var prod in FilteredProducts)
                {
               
                <div class="col-12 col-md-6 col-lg-4 pe-3 mb-5">
                    <div class="card">
                        <div class="mt-3 mb-2 row">
                            <div class="col-6 px-3">
                                @if(string.IsNullOrEmpty(prod.SpecialTag))
                                    {
                                        <i class="bi bi-star btn btn-outline-success disabled"> @prod.SpecialTag</i>

                                    }
                            </div>
                            <div class="col-6 text-end text-danger px-3 h-3">
                               @prod.Price.ToString("C",CultureInfo.GetCultureInfo("en-us"))
                            </div>
                        </div>
                        <div class="text-center">
                                @if (!string.IsNullOrEmpty(prod.ImageUrl))
                                {
                                    <img class="card-img-top img-thumbnail img-rounded w-50 mt-2"  src="@prod.ImageUrl" style="">

                                }
                                else
                                {
                                    <img class="card-img-top img-thumbnail img-rounded w-50 mt-2" src="images/default.png" style="">

                                }
                            </div>
                        <div class="card-body">
                            <h5 class="card-title text-center lead text-success">@prod.Name</h5>
                                <p class="card-text mt-2">@((MarkupString)@prod.Description)</p>

                            <h4 class="text-center">
                                <i class="bi bi-cart3 btn btn-success text-right  px-5 form-control" > Add to cart</i>
                            </h4>
                           
                        </div>
                    </div>
                </div>

                }
            </div>
        </div>
    </div>
}
@code{
    private IEnumerable<Product> Products = new List<Product>();
    private IEnumerable<Category> Categories = new List<Category>();
    private IEnumerable<Product> FilteredProducts = new List<Product>();

    private bool IsProcessing { get; set; } = true;
    private int _selectedCategoryId = 0;
    private string _searchText = "";
    protected override async void OnAfterRender(bool firstRender)
    {
        if (firstRender)
        {
            await LoadProducts();
            IsProcessing = false;
            StateHasChanged();
        }
    }

    private async Task LoadProducts()
    {
        Products = await _productrepository.GetAllAsync();
        Categories = await _categoryRepository.GetAllAsync();
        FilterProducts(0);
    }

    private void FilterProducts(int categoryId)
    {
        if (categoryId == 0)
        {
            FilteredProducts = Products;
            _selectedCategoryId = categoryId;
            return;
        }
        else
        {
            FilteredProducts = Products.Where(u => u.CategoryId == categoryId).ToList();
            _selectedCategoryId = categoryId;
            _searchText = string.Empty;
        }

    }

    private void FIlterProductByName(string newValueOfSearchText)
    {
        if(string.IsNullOrWhiteSpace(newValueOfSearchText))
        {
            FilteredProducts = Products;
        }
        else
        {
            FilteredProducts = Products.Where(u => u.Name.Contains(newValueOfSearchText, StringComparison.InvariantCultureIgnoreCase)).ToList();
        }
        _searchText = newValueOfSearchText;
    }

    private string GetActiveTabClass(int categorId)
    {
        return categorId == _selectedCategoryId?"active":string.Empty;
    }
}