@using YumBlazor.Utility
@inherits LayoutComponentBase
@inject AuthenticationStateProvider AuthenticationStateProvider

<div class="page">
    <AuthorizeView Roles=@SD.Role_Admin >
     <div class="sidebar">
        <NavMenu />
    </div>
    </AuthorizeView> 
   @*  <AuthorizeView >
        Any authorized USer
    </AuthorizeView >
     <AuthorizeView Roles=@SD.Role_Admin >
        Admin
    </AuthorizeView>
    <AuthorizeView Roles=@SD.Role_Customer >
        Customer
    </AuthorizeView> *@
    

    <main>
        @if (_navBarVisible)
        {
            <NavBar></NavBar>
        }
        
        <div class="top-row px-4">
            <a href="https://learn.microsoft.com/aspnet/core/" target="_blank">About</a>
        </div>

        <article class="content px-4">
            @Body
        </article>
    </main>
</div>

<div id="blazor-error-ui">
    An unhandled error has occurred.
    <a href="" class="reload">Reload</a>
    <a class="dismiss">🗙</a>
</div>
@code{
    private bool _navBarVisible;
    protected override async Task OnInitializedAsync()
    {
        _navBarVisible = await ShowNavBar();
    } 
    protected override async Task OnAfterRenderAsync(bool firstRender )
    {
        _navBarVisible = await ShowNavBar();
    }

    private async Task<bool> ShowNavBar()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;
        var authenticated = user.Identity is not null && user.Identity.IsAuthenticated;

        if(!authenticated)
        {
            return true;
        }
        //Nav bar should not be displayed to the admin user
        if (!user.IsInRole(SD.Role_Admin))
        {
            return true;
        }
       return false;
    }
}